# This is a basic workflow that is manually triggered

name: Revise Version

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      clusterName:
        description: 'Cluster Name'     
        required: true
      serviceName:
        description: 'Service Name'     
        required: true  
        
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  rollback-version:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1   
     
     - name: Configure J2
       uses: sergeysova/jq-action@v2
       with:
        cmd: jq -n env
     
     - name: Checkout 
       uses: actions/checkout@v2
     
     - name: Run single script
       run: sh aws_test.sh ${{ github.event.inputs.clusterName }} ${{ github.event.inputs.serviceName }}
#        run: |
#         result="$(aws ecs describe-services --cluster ${{ github.event.inputs.clusterName }} --service ${{ github.event.inputs.serviceName }} --query 'services[].taskDefinition' | jq -r '.[0]')"
#         version=${result:0-1}
#         previousVersion=(($version - 1))
    #    result=${result/%$version/$previousVersion}
     #   aws ecs update-service --cluster ${{ github.event.inputs.clusterName }} --service ${{ github.event.inputs.serviceName }} --task-definition $result
